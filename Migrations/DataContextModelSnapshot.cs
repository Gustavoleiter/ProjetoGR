// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoGR.Data;

#nullable disable

namespace ProjetoGR.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CursoUsuario", b =>
                {
                    b.Property<int>("CursosId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CursosId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("CursoUsuario");
                });

            modelBuilder.Entity("EstagioUsuario", b =>
                {
                    b.Property<int>("EstagiosId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("EstagiosId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EstagioUsuario");
                });

            modelBuilder.Entity("FaculdadeUsuario", b =>
                {
                    b.Property<int>("FaculdadesId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("FaculdadesId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("FaculdadeUsuario");
                });

            modelBuilder.Entity("ProjetoGR.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrição")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUrgencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataInicio = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Um curso introdutório de programação em Python.",
                            NomeCurso = "Introdução à Programação em Python",
                            TipoUrgencia = 1
                        },
                        new
                        {
                            Id = 2,
                            DataInicio = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Aprenda a criar sites utilizando HTML e CSS.",
                            NomeCurso = "Desenvolvimento Web com HTML e CSS",
                            TipoUrgencia = 0
                        },
                        new
                        {
                            Id = 3,
                            DataInicio = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Aprofunde seus conhecimentos em JavaScript e aprenda técnicas avançadas de programação.",
                            NomeCurso = "JavaScript Avançado",
                            TipoUrgencia = 2
                        },
                        new
                        {
                            Id = 4,
                            DataInicio = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Um curso introdutório sobre ciência de dados utilizando a linguagem Python.",
                            NomeCurso = "Introdução à Ciência de Dados com Python",
                            TipoUrgencia = 1
                        },
                        new
                        {
                            Id = 5,
                            DataInicio = new DateTime(2023, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Aprenda a criar aplicativos para dispositivos Android utilizando Java e Android Studio.",
                            NomeCurso = "Desenvolvimento de Aplicações Android",
                            TipoUrgencia = 2
                        },
                        new
                        {
                            Id = 6,
                            DataInicio = new DateTime(2023, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Aprenda os conceitos de programação orientada a objetos utilizando a linguagem C#.",
                            NomeCurso = "Programação Orientada a Objetos em C#",
                            TipoUrgencia = 1
                        },
                        new
                        {
                            Id = 7,
                            DataInicio = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Aprenda a desenvolver aplicações web full stack utilizando Node.js no backend e React no frontend.",
                            NomeCurso = "Desenvolvimento Full Stack com Node.js e React",
                            TipoUrgencia = 2
                        },
                        new
                        {
                            Id = 8,
                            DataInicio = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Um curso introdutório sobre os fundamentos e aplicações da inteligência artificial.",
                            NomeCurso = "Introdução à Inteligência Artificial",
                            TipoUrgencia = 2
                        });
                });

            modelBuilder.Entity("ProjetoGR.Models.Estagio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUrgencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Estagios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataInicio = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeEmpresa = "Empresa ABC",
                            TipoUrgencia = 0
                        },
                        new
                        {
                            Id = 2,
                            DataInicio = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2024, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeEmpresa = "Empresa XYZ",
                            TipoUrgencia = 1
                        },
                        new
                        {
                            Id = 3,
                            DataInicio = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2024, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeEmpresa = "Empresa 123",
                            TipoUrgencia = 2
                        },
                        new
                        {
                            Id = 4,
                            DataInicio = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2024, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeEmpresa = "Empresa ABCD",
                            TipoUrgencia = 1
                        },
                        new
                        {
                            Id = 5,
                            DataInicio = new DateTime(2023, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeEmpresa = "Empresa XYZW",
                            TipoUrgencia = 0
                        },
                        new
                        {
                            Id = 6,
                            DataInicio = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeEmpresa = "Empresa 1234",
                            TipoUrgencia = 2
                        });
                });

            modelBuilder.Entity("ProjetoGR.Models.Faculdade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrição")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeFaculdade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUrgencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Faculdades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataInicio = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2027, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Faculdade focada em cursos de ciência da computação e desenvolvimento de software.",
                            NomeFaculdade = "Faculdade de Ciência da Computação",
                            TipoUrgencia = 2
                        },
                        new
                        {
                            Id = 2,
                            DataInicio = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2028, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Faculdade especializada em cursos de engenharia de software e desenvolvimento ágil.",
                            NomeFaculdade = "Faculdade de Engenharia de Software",
                            TipoUrgencia = 2
                        },
                        new
                        {
                            Id = 3,
                            DataInicio = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2027, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Faculdade com enfoque em cursos de sistemas de informação e gestão de projetos de TI.",
                            NomeFaculdade = "Faculdade de Sistemas de Informação",
                            TipoUrgencia = 0
                        });
                });

            modelBuilder.Entity("ProjetoGR.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PasswordString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("colaboradores");

                    b.Property<TimeSpan>("TempoEstudo")
                        .HasColumnType("time");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gmail.com",
                            Idade = 0,
                            PasswordSalt = new byte[] { 32, 40, 95, 82, 78, 241, 165, 197, 159, 159, 0, 110, 23, 112, 236, 11, 209, 177, 99, 203, 112, 213, 48, 70, 175, 240, 17, 88, 124, 25, 45, 102, 247, 81, 104, 213, 205, 236, 54, 122, 5, 236, 218, 6, 144, 86, 199, 6, 147, 152, 42, 132, 7, 206, 134, 198, 217, 173, 2, 35, 111, 28, 50, 198, 25, 104, 151, 254, 240, 18, 211, 179, 253, 215, 88, 51, 245, 150, 224, 19, 9, 3, 52, 68, 142, 151, 21, 43, 25, 20, 0, 37, 0, 3, 29, 13, 121, 90, 9, 37, 22, 222, 100, 85, 246, 109, 58, 203, 225, 72, 29, 42, 139, 198, 70, 58, 137, 41, 47, 180, 63, 68, 89, 8, 167, 66, 1, 152 },
                            PasswordString = "",
                            Perfil = "chefe",
                            TempoEstudo = new TimeSpan(0, 0, 0, 0, 0),
                            Username = "PrimeiroUsuario"
                        });
                });

            modelBuilder.Entity("CursoUsuario", b =>
                {
                    b.HasOne("ProjetoGR.Models.Curso", null)
                        .WithMany()
                        .HasForeignKey("CursosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoGR.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EstagioUsuario", b =>
                {
                    b.HasOne("ProjetoGR.Models.Estagio", null)
                        .WithMany()
                        .HasForeignKey("EstagiosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoGR.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FaculdadeUsuario", b =>
                {
                    b.HasOne("ProjetoGR.Models.Faculdade", null)
                        .WithMany()
                        .HasForeignKey("FaculdadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoGR.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
