// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoGR.Data;

#nullable disable

namespace ProjetoGR.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoGR.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrição")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUrgencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataInicio = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Um curso introdutório de programação em Python.",
                            NomeCurso = "Introdução à Programação em Python",
                            TipoUrgencia = 1
                        },
                        new
                        {
                            Id = 2,
                            DataInicio = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Aprenda a criar sites utilizando HTML e CSS.",
                            NomeCurso = "Desenvolvimento Web com HTML e CSS",
                            TipoUrgencia = 0
                        },
                        new
                        {
                            Id = 3,
                            DataInicio = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Aprofunde seus conhecimentos em JavaScript e aprenda técnicas avançadas de programação.",
                            NomeCurso = "JavaScript Avançado",
                            TipoUrgencia = 2
                        },
                        new
                        {
                            Id = 4,
                            DataInicio = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Um curso introdutório sobre ciência de dados utilizando a linguagem Python.",
                            NomeCurso = "Introdução à Ciência de Dados com Python",
                            TipoUrgencia = 1
                        },
                        new
                        {
                            Id = 5,
                            DataInicio = new DateTime(2023, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Aprenda a criar aplicativos para dispositivos Android utilizando Java e Android Studio.",
                            NomeCurso = "Desenvolvimento de Aplicações Android",
                            TipoUrgencia = 2
                        },
                        new
                        {
                            Id = 6,
                            DataInicio = new DateTime(2023, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Aprenda os conceitos de programação orientada a objetos utilizando a linguagem C#.",
                            NomeCurso = "Programação Orientada a Objetos em C#",
                            TipoUrgencia = 1
                        },
                        new
                        {
                            Id = 7,
                            DataInicio = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Aprenda a desenvolver aplicações web full stack utilizando Node.js no backend e React no frontend.",
                            NomeCurso = "Desenvolvimento Full Stack com Node.js e React",
                            TipoUrgencia = 2
                        },
                        new
                        {
                            Id = 8,
                            DataInicio = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Um curso introdutório sobre os fundamentos e aplicações da inteligência artificial.",
                            NomeCurso = "Introdução à Inteligência Artificial",
                            TipoUrgencia = 2
                        });
                });

            modelBuilder.Entity("ProjetoGR.Models.Estagio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUrgencia")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Estagios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataInicio = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeEmpresa = "Empresa ABC",
                            TipoUrgencia = 0
                        },
                        new
                        {
                            Id = 2,
                            DataInicio = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2024, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeEmpresa = "Empresa XYZ",
                            TipoUrgencia = 1
                        },
                        new
                        {
                            Id = 3,
                            DataInicio = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2024, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeEmpresa = "Empresa 123",
                            TipoUrgencia = 2
                        },
                        new
                        {
                            Id = 4,
                            DataInicio = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2024, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeEmpresa = "Empresa ABCD",
                            TipoUrgencia = 1
                        },
                        new
                        {
                            Id = 5,
                            DataInicio = new DateTime(2023, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeEmpresa = "Empresa XYZW",
                            TipoUrgencia = 0
                        },
                        new
                        {
                            Id = 6,
                            DataInicio = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeEmpresa = "Empresa 1234",
                            TipoUrgencia = 2
                        });
                });

            modelBuilder.Entity("ProjetoGR.Models.Faculdade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrição")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeFaculdade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUrgencia")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Faculdades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataInicio = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2027, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Faculdade focada em cursos de ciência da computação e desenvolvimento de software.",
                            NomeFaculdade = "Faculdade de Ciência da Computação",
                            TipoUrgencia = 2
                        },
                        new
                        {
                            Id = 2,
                            DataInicio = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2028, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Faculdade especializada em cursos de engenharia de software e desenvolvimento ágil.",
                            NomeFaculdade = "Faculdade de Engenharia de Software",
                            TipoUrgencia = 2
                        },
                        new
                        {
                            Id = 3,
                            DataInicio = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataTermino = new DateTime(2027, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descrição = "Faculdade com enfoque em cursos de sistemas de informação e gestão de projetos de TI.",
                            NomeFaculdade = "Faculdade de Sistemas de Informação",
                            TipoUrgencia = 0
                        });
                });

            modelBuilder.Entity("ProjetoGR.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PasswordString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("colaboradores");

                    b.Property<TimeSpan>("TempoEstudo")
                        .HasColumnType("time");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "seuEmail@gmail.com",
                            Idade = 0,
                            PasswordHash = new byte[] { 49, 62, 80, 54, 202, 244, 30, 234, 164, 158, 36, 158, 13, 166, 168, 152, 165, 157, 109, 53, 244, 192, 79, 25, 50, 16, 152, 168, 201, 109, 104, 196, 179, 121, 25, 132, 222, 214, 248, 242, 188, 185, 182, 138, 35, 142, 133, 30, 163, 207, 104, 206, 241, 162, 163, 186, 218, 111, 104, 56, 66, 103, 36, 220 },
                            PasswordSalt = new byte[] { 60, 2, 61, 161, 80, 28, 110, 240, 130, 117, 209, 117, 109, 229, 95, 62, 212, 207, 57, 236, 35, 66, 0, 79, 119, 97, 148, 33, 61, 90, 26, 137, 192, 179, 204, 41, 181, 167, 234, 10, 175, 191, 232, 176, 78, 188, 127, 134, 154, 24, 32, 77, 85, 88, 129, 42, 108, 56, 243, 157, 159, 58, 108, 159, 254, 1, 107, 210, 246, 127, 137, 124, 29, 136, 206, 247, 102, 175, 199, 121, 53, 143, 92, 171, 226, 91, 179, 165, 61, 54, 137, 200, 105, 39, 229, 199, 199, 244, 25, 161, 93, 151, 122, 37, 82, 73, 88, 53, 0, 226, 233, 222, 193, 137, 194, 174, 141, 169, 35, 96, 215, 84, 25, 205, 9, 89, 110, 64 },
                            PasswordString = "",
                            Perfil = "chefe",
                            TempoEstudo = new TimeSpan(0, 0, 0, 0, 0),
                            Username = "PrimeiroUsuario"
                        });
                });

            modelBuilder.Entity("ProjetoGR.Models.Estagio", b =>
                {
                    b.HasOne("ProjetoGR.Models.Usuario", null)
                        .WithMany("Estagios")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("ProjetoGR.Models.Faculdade", b =>
                {
                    b.HasOne("ProjetoGR.Models.Usuario", null)
                        .WithMany("Faculdades")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("ProjetoGR.Models.Usuario", b =>
                {
                    b.Navigation("Estagios");

                    b.Navigation("Faculdades");
                });
#pragma warning restore 612, 618
        }
    }
}
